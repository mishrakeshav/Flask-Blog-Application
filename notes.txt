# >>> import secrets
# >>> secrets.token_hex(16)


>>> from flaskblog import db
>>> db.create_all()

>>> from flaskblog import User, Post
>>> user_1 = User(username = 'Keshav', email = 'k@demo.com', password = 'password')
>>> db.session.add(user_1)
>>> user_2 = User(username = 'Mishra', email = 'mishra@gmail.com', password = 'password')
>>> db.session.commit()
>>> db.session.add(user_2)
>>> db.session.commit()

>>> User.query.all()
[User('Keshav','k@demo.com','default.jpg'), User('Mishra','mishra@gmail.com','default.jpg')]
>>> User.query.first()
User('Keshav','k@demo.com','default.jpg')
>>> User.query.filter_by(username = 'Keshav').all()
[User('Keshav','k@demo.com','default.jpg')]
>>> user = User.query.filter_by(username = 'Keshav').first()
>>> user
User('Keshav','k@demo.com','default.jpg')
>>> user.id
1
>>> user.posts
[]

>>> db.drop_all()
>>> db.create_all()


Extension for hashing password
>>>pip install flask-bcrypt
>>> from flask_bcrypt import Bcrypt
>>> bcrypt = Bcrypt()
>>> bcrypt.generate_password_hash('testing')
b'$2b$12$Y29YjIhf1wPsIfEWYB.AUea8DoUezmsIzEdMu8GRrW5Fr6dd9KVWG'
>>> bcrypt.generate_password_hash('testing').decode()
'$2b$12$090u4sFmseGt1f0yV0E2UeEIFrFka6je4nvjhq1wZy406B5f.BQde'
>>> bcrypt.generate_password_hash('testing').decode('utf-8')
'$2b$12$afzWdpwoRUKw7MkKz2Q8yui5k4wYlW/4.IyGI118uxsM7i7dP5SPC'
>>> hashed_password = bcrypt.generate_password_hash('testing').decode('utf-8')
>>> bcrypt.check_password_hash(hashed_password, 'password')
False
>>> bcrypt.check_password_hash(hashed_password, 'testing')
True
>>>

Extension for managing session for login and logout
>>>pip install flask-login

>>>pip install Pillow

>>>pip install flask-mail